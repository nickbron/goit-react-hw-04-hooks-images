{"version":3,"sources":["Components/Searchbar/Searchbar.styled.jsx","Components/Searchbar/Searchbar.jsx","Services/api.js","Components/ImageGalleryItem/ImageGalleryItem.styled.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.styled.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Button/Button.styled.jsx","Components/Button/Button.jsx","Components/Modal/Modal.styled.jsx","Components/Modal/Modal.jsx","Components/Spinner/Spinner.styled.jsx","Components/Spinner/Spinner.jsx","Components/App.jsx","index.js"],"names":["Header","Form","SearchButton","SearchButtonLabel","Input","Searchbar","onSearch","onSubmit","e","preventDefault","target","elements","pictureName","value","trim","toast","error","autoComplete","type","name","className","autoFocus","placeholder","axios","defaults","baseURL","params","image_type","key","per_page","safesearch","fetchPictures","page","a","get","q","response","data","hits","GalleryItem","GalleryItemImage","ImageGalleryItem","item","imageLarge","onSelect","src","webformatURL","alt","onClick","id","Gallery","ImageGallery","pic","map","image","largeImageURL","Button","LoadMoreBtn","Overlay","ModalWindow","modalRoot","document","querySelector","Modal","props","useEffect","window","addEventListener","onKeyDown","removeEventListener","code","onClose","createPortal","currentTarget","children","Div","styled","div","Spinner","color","height","width","timeout","Component","App","useState","setPictureName","pictures","setPictures","setPage","selectedImage","setSelectedImage","showModal","setShowModal","toggleModal","fetchData","imageInfo","length","scrollTo","top","documentElement","scrollHeight","behavior","then","res","prevPage","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"mRAEO,IAAMA,EAAM,4YAkBNC,EAAI,4KAUJC,EAAY,oYAkBZC,EAAiB,2MAYjBC,EAAK,yO,OClDLC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAU1B,OACE,cAACN,EAAD,UACE,eAACC,EAAD,CAAMM,SAXW,SAAAC,GACnBA,EAAEC,iBACiD,KAA/CD,EAAEE,OAAOC,SAASC,YAAYC,MAAMC,OAIxCR,EAASE,EAAEE,OAAOC,SAASC,YAAYC,OAHrCE,IAAMC,MAAM,wJAQkBC,aAAa,MAA3C,UACE,cAACf,EAAD,CAAcgB,KAAK,SAAnB,SACE,cAACf,EAAD,uBAGF,cAACC,EAAD,CACEe,KAAK,cACLC,UAAU,mBACVF,KAAK,OACLD,aAAa,MACbI,WAAS,EACTC,YAAY,mC,iBCftBC,IAAMC,SAASC,QAFE,2BAGjBF,IAAMC,SAASE,OAAS,CACtBC,WAAY,QACZC,IANc,qCAOdC,SAAU,GACVC,YAAY,GAGP,IAAMC,EAAa,uCAAG,WAAOZ,EAAMa,GAAb,eAAAC,EAAA,sEACJV,IAAMW,IAAI,GAAI,CACnCR,OAAQ,CACNS,EAAGhB,EACHa,UAJuB,cACrBI,EADqB,yBAQpBA,EAASC,KAAKC,MARM,2CAAH,wDCxBnB,IAAMC,EAAW,0MAMXC,EAAgB,mNCNhBC,EAAmB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACnD,OACE,cAACL,EAAD,UACE,cAACC,EAAD,CACEK,IAAKH,EAAKI,aACVC,IAAI,GACJC,QAAS,kBAAMJ,EAASD,OAJVD,EAAKO,KCHpB,IAAMC,EAAO,+QCEPC,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,IAAKR,EAAe,EAAfA,SAClC,OACE,cAACM,EAAD,UACGE,EAAIC,KAAI,SAAAC,GAAK,OACZ,cAAC,EAAD,CAEEZ,KAAMY,EACNX,WAAYW,EAAMC,cAClBX,SAAUA,GAHLU,EAAMR,oBCNd,IAAMU,EAAM,2LCANC,EAAc,SAAC,GAAiB,IAAfT,EAAc,EAAdA,QAC5B,OACE,mCACE,cAACQ,EAAD,CAAQtC,KAAK,SAAS8B,QAASA,EAA/B,0BCHC,IAAMU,EAAO,kNAYPC,EAAW,6HCRlBC,EAAYC,SAASC,cAAc,eAE1B,SAASC,EAAMC,GAC5BC,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,WACLF,OAAOG,oBAAoB,UAAWD,OAI1C,IAAMA,EAAY,SAAA5D,GACD,WAAXA,EAAE8D,MACJN,EAAMO,WASV,OAAOC,uBACL,cAACd,EAAD,CAASV,QANY,SAAAxC,GACjBA,EAAEE,SAAWF,EAAEiE,eACjBT,EAAMO,WAIR,SACE,cAACZ,EAAD,UAAcK,EAAMU,aAEtBd,G,+DC7BSe,E,MAAMC,EAAOC,IAAV,0ICEKC,E,4JAEnB,WACE,OACE,cAACH,EAAD,UACE,cAAC,IAAD,CACEzD,KAAK,OACL6D,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,Y,GAVkBC,aCMtB,SAASC,IACtB,MAAsCC,mBAAS,IAA/C,mBAAOzE,EAAP,KAAoB0E,EAApB,KACA,EAAgCD,mBAAS,IAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAAwBH,mBAAS,GAAjC,mBAAOrD,EAAP,KAAayD,EAAb,KACA,EAA0CJ,mBAAS,MAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KASMC,EAAc,WAClBD,GAAcD,IAwChB,OAxBA3B,qBAAU,WACR,IAAM8B,EAAS,uCAAG,8BAAA9D,EAAA,sEACGF,EAAcnB,EAAaoB,GAD9B,cACVK,EADU,OAOS,KALnB2D,EAAY3D,EAAKgB,KAAI,kBAA0C,CACnEJ,GADyB,EAAGA,GAE5BM,cAFyB,EAAOA,cAGhCT,aAHyB,EAAsBA,kBAKnCmD,QACZlF,IAAMC,MAAM,mMARE,kBAUTgF,GAVS,2CAAH,qDAaf,GAA2B,KAAvBpF,EAAYE,OAAhB,CAGA,IAAMkF,EAAYD,IAxClB7B,OAAOgC,SAAS,CACdC,IAAKtC,SAASuC,gBAAgBC,aAC9BC,SAAU,WAwCZN,EAAUO,MAAK,SAAAC,GACbhB,EAAYgB,SAEb,CAACxE,EAAMpB,IAGR,sBAAKQ,UAAU,MAAf,UACE,cAAC,EAAD,CAAWd,SAvCS,SAAAM,GACtB0E,EAAe1E,MAuCZ2E,EAASU,OAAS,GACjB,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAc7C,IAAKmC,EAAU3C,SAvCX,SAAA8C,GACxBC,EAAiBD,GACjBI,OAmCI,IAGE,cAAC,EAAD,CAAa9C,QAnCJ,WACfyC,GAAQ,SAAAgB,GAAQ,OAAIA,EAAW,QAmCxBb,GACC,cAAC7B,EAAD,CAAOQ,QAASuB,EAAhB,SACE,qBAAKjD,IAAK6C,EAAe3C,IAAI,UAKrC,cAAC,IAAD,CACE2D,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,OCpFpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjC,EAAD,MAEFvB,SAASyD,eAAe,W","file":"static/js/main.a3d0a148.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\r\n\r\nexport const Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  /* width: 100%; */\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const SearchButton = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const SearchButtonLabel = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import { toast } from 'react-toastify';\r\n\r\nimport {\r\n  Header,\r\n  Form,\r\n  SearchButton,\r\n  SearchButtonLabel,\r\n  Input,\r\n} from './Searchbar.styled';\r\n\r\nexport const Searchbar = ({ onSearch }) => {\r\n  const handleSearch = e => {\r\n    e.preventDefault();\r\n    if (e.target.elements.pictureName.value.trim() === '') {\r\n      toast.error('Для поиска введите значение');\r\n      return;\r\n    }\r\n    onSearch(e.target.elements.pictureName.value);\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      <Form onSubmit={handleSearch} autoComplete=\"off\">\r\n        <SearchButton type=\"submit\">\r\n          <SearchButtonLabel>Search</SearchButtonLabel>\r\n        </SearchButton>\r\n\r\n        <Input\r\n          name=\"pictureName\"\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </Form>\r\n    </Header>\r\n  );\r\n};\r\n","// import axios from 'axios';\n// const API_KEY = '22624023-cde2aba775d295bec8b1b2952';\n// const BASE_URL = 'https://pixabay.com/api/';\n\n// export const fetchPictures = async (name, page) => {\n//   const params =\n//     'image_type=photo$orientation=horizontal&safesearch=true&per_page=12';\n//   const response = await axios.get(\n//     `${BASE_URL}?key=${API_KEY}&q=${name}&${params}&page=${page}`,\n//   );\n\n//   return response.data.hits;\n// };\n\nimport axios from 'axios';\nconst API_KEY = '22624023-cde2aba775d295bec8b1b2952';\nconst BASE_URL = 'https://pixabay.com/api/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  image_type: 'photo',\n  key: API_KEY,\n  per_page: 12,\n  safesearch: true,\n};\n\nexport const fetchPictures = async (name, page) => {\n  const response = await axios.get('', {\n    params: {\n      q: name,\n      page,\n    },\n  });\n\n  return response.data.hits;\n};\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const GalleryItem = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const GalleryItemImage = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n","import { GalleryItem, GalleryItemImage } from './ImageGalleryItem.styled';\r\n\r\nexport const ImageGalleryItem = ({ item, imageLarge, onSelect }) => {\r\n  return (\r\n    <GalleryItem key={item.id}>\r\n      <GalleryItemImage\r\n        src={item.webformatURL}\r\n        alt=\"\"\r\n        onClick={() => onSelect(imageLarge)}\r\n      />\r\n    </GalleryItem>\r\n  );\r\n};\r\n","import styled from '@emotion/styled/macro';\r\nexport const Gallery = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n","import { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\r\nimport { Gallery } from './ImageGallery.styled';\r\n\r\nexport const ImageGallery = ({ pic, onSelect }) => {\r\n  return (\r\n    <Gallery>\r\n      {pic.map(image => (\r\n        <ImageGalleryItem\r\n          key={image.webformatURL}\r\n          item={image}\r\n          imageLarge={image.largeImageURL}\r\n          onSelect={onSelect}\r\n        />\r\n      ))}\r\n    </Gallery>\r\n  );\r\n};\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const Button = styled.button`\r\n  border: none;\r\n  background: rgb(0, 166, 243);\r\n  color: #ffffff;\r\n  border-radius: 15px;\r\n  padding: 15px 35px;\r\n\r\n  margin: 0 auto;\r\n  display: block;\r\n`;\r\n","import { Button } from './Button.styled';\r\n\r\nexport const LoadMoreBtn = ({ onClick }) => {\r\n  return (\r\n    <>\r\n      <Button type=\"button\" onClick={onClick}>\r\n        Load more\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nexport const ModalWindow = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`;\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport { ModalWindow, Overlay } from './Modal.styled';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal(props) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', onKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', onKeyDown);\r\n    };\r\n  });\r\n\r\n  const onKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      props.onClose();\r\n    }\r\n  };\r\n\r\n  const onOverlayClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      props.onClose();\r\n    }\r\n  };\r\n  return createPortal(\r\n    <Overlay onClick={onOverlayClick}>\r\n      <ModalWindow>{props.children}</ModalWindow>\r\n    </Overlay>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Div = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  margin-right: -50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n","import { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport { Div } from './Spinner.styled';\r\n\r\nexport default class Spinner extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Div>\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000} //3 secs\r\n        />\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useState, useEffect } from 'react';\nimport { Searchbar } from './Searchbar/Searchbar';\nimport { fetchPictures } from 'Services/api';\nimport { ImageGallery } from './ImageGallery/ImageGallery';\nimport { LoadMoreBtn } from './Button/Button';\nimport Modal from './Modal/Modal';\nimport Spinner from './Spinner/Spinner';\n\nexport default function App() {\n  const [pictureName, setPictureName] = useState('');\n  const [pictures, setPictures] = useState([]);\n  const [page, setPage] = useState(1);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const handleBarSubmit = pictureName => {\n    setPictureName(pictureName);\n  };\n\n  const handleSelectImage = selectedImage => {\n    setSelectedImage(selectedImage);\n    toggleModal();\n  };\n\n  const showMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fetchPictures(pictureName, page);\n      const imageInfo = data.map(({ id, largeImageURL, webformatURL }) => ({\n        id,\n        largeImageURL,\n        webformatURL,\n      }));\n      if (imageInfo.length === 0) {\n        toast.error('По данному запросу ничего не найдено');\n      }\n      return imageInfo;\n    };\n\n    if (pictureName.trim() === '') {\n      return;\n    }\n    const imageInfo = fetchData();\n    scroll();\n    imageInfo.then(res => {\n      setPictures(res);\n    });\n  }, [page, pictureName]);\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSearch={handleBarSubmit} />\n      {pictures.length > 0 && (\n        <>\n          <Spinner />\n          <ImageGallery pic={pictures} onSelect={handleSelectImage} />;\n          <LoadMoreBtn onClick={showMore} />\n          {showModal && (\n            <Modal onClose={toggleModal}>\n              <img src={selectedImage} alt=\"\" />\n            </Modal>\n          )}\n        </>\n      )}\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}